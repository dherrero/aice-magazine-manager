{
  "version": 3,
  "sources": ["../../../../../../../../apps/app-back/src/adapters/http/http.responser.ts"],
  "sourcesContent": ["import { Response } from 'express';\n\nclass HttpResponser {\n  /**\n   * @description Send success response with json data\n   *\n   * @param res\n   * @param data\n   * @param statusCode\n   * @returns\n   */\n  static successJson = (res: Response, data: unknown, statusCode = 200) =>\n    HttpResponser.#sendJson(res, data, statusCode);\n  /**\n   * @description Send success response with empty data\n   *\n   * @param res\n   * @param statusCode\n   * @returns\n   */\n  static successEmpty = (res: Response, statusCode = 200) =>\n    HttpResponser.#sendData(res, null, statusCode);\n  /**\n   * @description Send error response with json data\n   *\n   * @param res\n   * @param error\n   * @param statusCode\n   * @returns\n   */\n  static errorJson = (\n    res: Response,\n    error: Record<string, string>,\n    statusCode = 500\n  ) => HttpResponser.#sendJson(res, { error: error.message }, statusCode);\n\n  static #sendJson = (res: Response, data: unknown, statusCode: number) =>\n    res.status(statusCode).json(data);\n  static #sendData = (res: Response, data: unknown, statusCode: number) =>\n    res.status(statusCode).send(data);\n}\n\nexport default HttpResponser;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,MAAM,cAAc;AAAA,EASlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,cAAc,CAAC,KAAe,MAAe,aAAa,QAC/D,cAAc,UAAU,KAAK,MAAM,UAAU;AAAA;AAAA,EAQ/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,eAAe,CAAC,KAAe,aAAa,QACjD,cAAc,UAAU,KAAK,MAAM,UAAU;AAAA;AAAA,EAS/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,YAAY,CACjB,KACA,OACA,aAAa,QACV,cAAc,UAAU,KAAK,EAAE,OAAO,MAAM,QAAQ,GAAG,UAAU;AAAA;AAAA,EAEtE,OAAO,YAAY,CAAC,KAAe,MAAe,eAChD,IAAI,OAAO,UAAU,EAAE,KAAK,IAAI;AAAA,EAClC,OAAO,YAAY,CAAC,KAAe,MAAe,eAChD,IAAI,OAAO,UAAU,EAAE,KAAK,IAAI;AACpC;AAEA,IAAO,yBAAQ;",
  "names": []
}
